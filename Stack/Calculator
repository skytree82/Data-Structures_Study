#include <iostream>
#include <stack>

using namespace std;

int GetOpPrec(char op) {
    switch (op) {
    case '*': case '/':
        return 5;
    case '+': case '-':
        return 3;
    case '(':
        return 1;
    }
    return -1;
}

int WhoIsPrec(char op1, char op2) {
    int op1Prec = GetOpPrec(op1);
    int op2Prec = GetOpPrec(op2);

    if (op1Prec > op2Prec) return 1;
    else if (op1Prec == op2Prec) return 0;
    else return -1;
}

void ConvToRPNExp(string& exp) {
    string result = "";
    stack<char> opStack;

    for (char op : exp) {
        if (isdigit(op)) {
            result += op;
        }
        else {
            if (opStack.empty()) {
                opStack.push(op);
            }
            else {
                if (op == '(') opStack.push(op);
                else if (op == ')') {
                    while (opStack.top() != '(') {
                        result += opStack.top();
                        opStack.pop();
                    }
                    opStack.pop();
                }
                else {
                    if (WhoIsPrec(opStack.top(), op) < 0) {
                        opStack.push(op);
                    }
                    else {
                        while (!opStack.empty() && WhoIsPrec(opStack.top(), op) >= 0) {
                            result += opStack.top();
                            opStack.pop();
                        }
                        opStack.push(op);
                    }
                }
            }
        }

    }

    while (!opStack.empty()) {
        result += opStack.top();
        opStack.pop();
    }

    exp = result;
}

int Calculator(string exp) {
    stack<int> nums;

    for (char op : exp) {
        if (isdigit(op)) {
            nums.push(op - '0');
        }
        else {
            int op2 = nums.top(); nums.pop();
            int op1 = nums.top(); nums.pop();

            switch (op)
            {
            case '+':
                nums.push(op1 + op2);
                break;
            case '-':
                nums.push(op1 - op2);
                break;
            case '*':
                nums.push(op1 * op2);
                break;
            case '/':
                nums.push(op1 / op2);
                break;
            }
        }
    }

    return nums.top();
}

int main() {
    string str1 = "(1*2+3)/4";
    ConvToRPNExp(str1);
    cout << Calculator(str1);

	return 0;
}
